import esbuild from "esbuild";
import process from "process";
import fs from "fs";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');

const copyPlugin = {
	name: 'copy-pdf-worker',
	setup(build) {
		build.onEnd(() => {
			const sourcePath = 'node_modules/pdfjs-dist/build/pdf.worker.mjs';
			const destPath = 'pdf.worker.mjs';
			try {
				if (fs.existsSync(sourcePath)) {
					fs.copyFileSync(sourcePath, destPath);
					console.log('Copied pdf.worker.mjs to plugin root.');
				}
			} catch (err) {
				console.error('Failed to copy pdf.worker.mjs:', err);
			}
		});
	},
};

const config = {
	banner: { js: banner },
	entryPoints: ['src/main.ts'],
	bundle: true,
	external: ['obsidian'],
	format: 'cjs',
	target: 'es2020',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: 'main.js',
	plugins: [copyPlugin],
};

if (prod) {
	esbuild.build(config).catch(() => process.exit(1));
} else {
	esbuild.context(config).then(ctx => {
		console.log("Watching for changes...");
		ctx.watch();
	}).catch(() => process.exit(1));
}